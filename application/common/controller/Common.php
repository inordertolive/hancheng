<?php// +----------------------------------------------------------------------// |ZBPHP[基于ThinkPHP5.1开发]// +----------------------------------------------------------------------// | Copyright (c) 2016-2019 http://www.benbenwangluo.com// +----------------------------------------------------------------------// | Author 似水星辰 [ 2630481389@qq.com ]// +----------------------------------------------------------------------// | 中犇软件 技术六部 出品// +----------------------------------------------------------------------namespace app\common\controller;use think\Controller;/** * 项目公共控制器 * @package app\common\controller */class Common extends Controller{    /**     * 顶部按钮组     * @author 似水星辰 [ 2630481389@qq.com ]     */    public $top_button = [        ['ident'=> 'add', 'title'=>'新增', 'href'=>['add', ['layer' => 1]], 'icon'=>'fa fa-plus pr5','class'=>'btn btn-sm mr5 btn-success btn-flat open_right'],        ['ident'=> 'enable', 'title'=>'批量启用','href'=>['setstatus',['type'=>'enable']],'icon'=>'fa fa-check-circle pr5','class'=>'btn btn-sm mr5 btn-primary btn-flat ajax-post confirm','extra'=>'target-form="ids"'],        ['ident'=> 'disable', 'title'=>'批量禁用','href'=>['setstatus',['type'=>'disable']],'icon'=>'fa fa-ban pr5','class'=>'btn btn-sm mr5 btn-primary btn-flat ajax-post confirm','extra'=>'target-form="ids"'],        ['ident'=> 'delete', 'title'=>'批量删除','href'=>'delete','icon'=>'fa fa-times pr5','class'=>'btn btn-sm mr5 btn-danger btn-flat ajax-post confirm','extra'=>'target-form="ids"'],    ];    /**     * 右侧按钮组     * @author 似水星辰 [ 2630481389@qq.com ]     */    public $right_button = [        ['ident'=> 'edit', 'title'=>'编辑','href'=>['edit', ['layer' => 1,'id'=>'__id__']],'icon'=>'fa fa-pencil pr5','class'=>'btn btn-xs mr5 btn-info btn-flat open_right'],        ['ident'=> 'disable', 'title'=>'禁用','href'=>['setstatus',['type'=>'disable','ids'=>'__id__']],'icon'=>'fa fa-ban pr5','class'=>'btn btn-xs mr5 btn-primary btn-flat ajax-get confirm'],        ['ident'=> 'delete', 'title'=>'删除','href'=>['delete',['ids'=>'__id__']],'icon'=>'fa fa-times pr5','class'=>'btn btn-xs mr5 btn-danger btn-flat ajax-get confirm'],    ];    /**     * 初始化     * @author 似水星辰 [ 2630481389@qq.com ]     */    protected function initialize()    {        // 模块后台公共模板        $this->assign('admin_layout', APP_PATH . 'admin/view/layout.html');        // 输出弹出层参数        $this->assign('layer', $this->request->param('layer'));    }    /**     * 获取当前操作模型     * @author 似水星辰 [ 2630481389@qq.com ]     * @return object|\think\db\Query     */    final protected function getModel()    {        $controller  = parse_name($this->request->controller());        // 使用模型        try {            $Model = \App::model($controller);        } catch (\Exception $e) {            $this->error('找不到模型：'.$controller);        }        return $Model;    }    /**     * 设置状态     * 禁用、启用、删除都是调用这个内部方法     * @param string $type 操作类型：enable,disable,delete     * @author 似水星辰 [ 2630481389@qq.com ]     * @return mixed     */    public function setStatus($type = '')    {        $ids   = $this->request->isPost() ? input('post.ids/a') : input('param.ids');        $ids   = (array)$ids;        $field = input('param.field', 'status');        empty($ids) && $this->error('缺少主键');        $Model = $this->getModel();        $protect_table = [            '__ADMIN__',            '__ADMIN_ROLE__',            '__ADMIN_MODULE__',            config('database.prefix').'admin',            config('database.prefix').'admin_role',            config('database.prefix').'admin_module',        ];        // 禁止操作核心表的主要数据        if (in_array($Model->getTable(), $protect_table) && in_array('1', $ids)) {            $this->error('禁止操作');        }        // 主键名称        $pk = $Model->getPk();        $result = false;        switch ($type) {            case 'disable': // 禁用                $result = $Model->where($pk,'IN',$ids)->setField($field, 0);                break;            case 'enable': // 启用                $result = $Model->where($pk,'IN',$ids)->setField($field, 1);                break;            case 'delete': // 删除                $result = $Model->where($pk,'IN',$ids)->delete();                break;            default:                $this->error('非法操作');                break;        }        $table = strtolower(str_replace('__','',$Model->getTable()));        if (false !== $result) {            // \Cache::clear();            // 记录行为            action_log($table.'_'.$type, $table, $ids, UID, 'ID：'.implode('、', $ids));            $this->success('操作成功');        } else {            $this->error('操作失败');        }    }    /**     * 删除记录     * @return void     * @author 似水星辰 [ 2630481389@qq.com ]     */    public function delete(){        $ids   = $this->request->isPost() ? input('post.ids/a') : input('param.ids');        $ids   = (array)$ids;        if($ids){            $this->setStatus('delete');        }        $this->error('缺少参数');    }    /**     * 设置表单字段数据     * @param array $fields 字段名集合     * @param array $info 对应字段值集合     * @return array     * @author 似水星辰 [ 2630481389@qq.com ]     */    public function setData($fields = [], $info =[]){        if(is_array($fields)){            foreach($fields as &$v){                if($v['type'] != 'sort'){                    if($v['type'] == 'password'){                        $v['value'] = '';                    }else if($v['type'] == 'attr'){                        $v['value'] = htmlspecialchars_decode($info[$v['name']]);                    }else{                        if(empty($v['value'])){                            $v['value'] = $info[$v['name']];                        }                        //if($info[$v['name']]){                        //}                    }                }            }        }        return $fields;    }    /**     * 获取筛选条件     * @author 似水星辰 [ 2630481389@qq.com ]     * @alter 小乌 <82950492@qq.com>     * @return array     */    final protected function getMap($map = [])    {        $search_field     = input('param.search_field/s', '');        $keyword          = input('param.keyword/s', '');        $filter_time      = input('param._filter_time/s', '');        $filter_between      = input('param._filter_between', '');        $filter_time_from = input('param._filter_time_from/s', '');        $filter_time_to   = input('param._filter_time_to/s', '');        $params = input('param.');        unset($params['order']);        unset($params['by']);        if($search_field && $keyword ==''){            $this->error('关键词不能为空');        }        // 搜索框搜索        if ($search_field != '' && $keyword !== '') {            $map[] = [$search_field, 'like', "%$keyword%"];            unset($params['search_field']);            unset($params['keyword']);        }        // 时间段搜索        if ($filter_time != '' && $filter_time_from != '' && $filter_time_to != '') {            $map[] = [$filter_time,'between time', [$filter_time_from.' 00:00:00', $filter_time_to.' 23:59:59']];        }        unset($params['_filter_time']);        unset($params['_filter_time_from']);        unset($params['_filter_time_to']);        //区间筛选        if(!empty($filter_between)){            foreach ($filter_between as $item){                $startFilter = $item.'_start';                $endFilter = $item.'_end';                $startValue = input($startFilter, '');                $endValue = input($endFilter, '');                if ($startValue != '' && $endValue != '') {                    $map[] = [$item,'between', [$startValue, $endValue]];                    $this->assign([                        $startFilter=>$startValue,                        $endFilter=>$endValue,                    ]);                }                unset($params[$item]);                unset($params[$startFilter]);                unset($params[$endFilter]);            }        }        if(!empty($params)){            foreach($params as $k=>$v){                if(!empty($v) && $k != 'page'){                    $map[] = [$k, '=',$v];                }            }        }//        unset($map['search_field'],$map['keyword']);//        if(!$map){//            $map = input('param.');//            foreach($map as $k=>$v){//                if($map[$k] == '' || $map['page']){//                    unset($map[$k]);//                }//            }//        }        return $map;    }    /**     * 获取字段排序     * @param string $extra_order 额外的排序字段     * @param bool $before 额外排序字段是否前置     * @author 似水星辰 [ 2630481389@qq.com ]     * @return string     */    final protected function getOrder($extra_order = '', $before = false)    {        $order = input('param.order/s', '');        $by    = input('param.by/s', '');        if ($order == '' || $by == '') {            return $extra_order;        }        if ($extra_order == '') {            return $order. ' '. $by;        }        if ($before) {            return $extra_order. ',' .$order. ' '. $by;        } else {            return $order. ' '. $by . ',' . $extra_order;        }    }}